# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rc2.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\trc2.proto\x12\trep.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x81\x03\n\x05\x45vent\x12\x0c\n\x04\x66rom\x18\x01 \x01(\t\x12\n\n\x02to\x18\x02 \x01(\t\x12\'\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32\x17.rep.proto.Event.Action\x12\x1d\n\x03\x62lk\x18\x04 \x01(\x0b\x32\x10.rep.proto.Block\x12\x1e\n\x16\x63ontract_event_content\x18\x05 \x01(\t\"\xf5\x01\n\x06\x41\x63tion\x12\x13\n\x0fSUBSCRIBE_TOPIC\x10\x00\x12\x0f\n\x0bTRANSACTION\x10\x01\x12\r\n\tBLOCK_NEW\x10\x02\x12\x15\n\x11\x42LOCK_ENDORSEMENT\x10\x03\x12\x0f\n\x0b\x45NDORSEMENT\x10\x04\x12\r\n\tMEMBER_UP\x10\x05\x12\x0f\n\x0bMEMBER_DOWN\x10\x06\x12\x0e\n\nCANDIDATOR\x10\x07\x12\x11\n\rGENESIS_BLOCK\x10\x08\x12\x0e\n\nBLOCK_SYNC\x10\t\x12\x13\n\x0f\x42LOCK_SYNC_DATA\x10\n\x12\x12\n\x0e\x42LOCK_SYNC_SUC\x10\x0b\x12\x12\n\x0e\x43ONTRACT_EVENT\x10\x0c\"\xf1\x02\n\x06Signer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x63redit_code\x18\x02 \x01(\t\x12\x0e\n\x06mobile\x18\x03 \x01(\t\x12\x12\n\ncert_names\x18\x04 \x03(\t\x12\x15\n\rauthorize_ids\x18\x05 \x03(\t\x12\x13\n\x0boperate_ids\x18\x06 \x03(\t\x12\x1f\n\x17\x63redential_metadata_ids\x18\x07 \x03(\t\x12\x34\n\x14\x61uthentication_certs\x18\x08 \x03(\x0b\x32\x16.rep.proto.Certificate\x12\x13\n\x0bsigner_info\x18\t \x01(\t\x12/\n\x0b\x63reate_time\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x0c\x64isable_time\x18\x0b \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x14\n\x0csigner_valid\x18\x0c \x01(\x08\x12\x0f\n\x07version\x18\r \x01(\t\"A\n\x06\x43\x65rtId\x12\x13\n\x0b\x63redit_code\x18\x01 \x01(\t\x12\x11\n\tcert_name\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\"\xe7\x02\n\x0b\x43\x65rtificate\x12\x13\n\x0b\x63\x65rtificate\x18\x01 \x01(\t\x12\x10\n\x08\x61lg_type\x18\x02 \x01(\t\x12\x12\n\ncert_valid\x18\x03 \x01(\x08\x12,\n\x08reg_Time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\nunreg_Time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x32\n\tcert_type\x18\x06 \x01(\x0e\x32\x1f.rep.proto.Certificate.CertType\x12\x1d\n\x02id\x18\x07 \x01(\x0b\x32\x11.rep.proto.CertId\x12\x11\n\tcert_hash\x18\x08 \x01(\t\x12\x0f\n\x07version\x18\t \x01(\t\"H\n\x08\x43\x65rtType\x12\x12\n\x0e\x43\x45RT_UNDEFINED\x10\x00\x12\x17\n\x13\x43\x45RT_AUTHENTICATION\x10\x01\x12\x0f\n\x0b\x43\x45RT_CUSTOM\x10\x02\"\xb0\x03\n\x07Operate\x12\r\n\x05op_id\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x10\n\x08register\x18\x03 \x01(\t\x12\x12\n\nis_publish\x18\x04 \x01(\x08\x12\x34\n\x0coperate_type\x18\x05 \x01(\x0e\x32\x1e.rep.proto.Operate.OperateType\x12\x1c\n\x14operate_service_name\x18\x06 \x03(\t\x12\x18\n\x10operate_endpoint\x18\x07 \x01(\t\x12\x16\n\x0e\x61uth_full_name\x18\x08 \x01(\t\x12/\n\x0b\x63reate_time\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x0c\x64isable_time\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x10\n\x08op_valid\x18\x0b \x01(\x08\x12\x0f\n\x07version\x18\x0c \x01(\t\"O\n\x0bOperateType\x12\x15\n\x11OPERATE_UNDEFINED\x10\x00\x12\x14\n\x10OPERATE_CONTRACT\x10\x01\x12\x13\n\x0fOPERATE_SERVICE\x10\x02\"\xdd\x02\n\tAuthorize\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05grant\x18\x02 \x01(\t\x12\x0f\n\x07granted\x18\x03 \x03(\t\x12\r\n\x05op_id\x18\x04 \x03(\t\x12\x36\n\x0bis_transfer\x18\x05 \x01(\x0e\x32!.rep.proto.Authorize.TransferType\x12/\n\x0b\x63reate_time\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x0c\x64isable_time\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x17\n\x0f\x61uthorize_valid\x18\x08 \x01(\x08\x12\x0f\n\x07version\x18\t \x01(\t\"P\n\x0cTransferType\x12\x14\n\x10TRANSFER_DISABLE\x10\x00\x12\x11\n\rTRANSFER_ONCE\x10\x01\x12\x17\n\x13TRANSFER_REPEATEDLY\x10\x02\"`\n\x13\x42indCertToAuthorize\x12\x14\n\x0c\x61uthorize_id\x18\x01 \x01(\t\x12\"\n\x07granted\x18\x02 \x01(\x0b\x32\x11.rep.proto.CertId\x12\x0f\n\x07version\x18\x03 \x01(\t\"\xbc\x01\n\x0c\x43reClaStruct\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x13\n\x0b\x63\x63s_version\x18\x04 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x0f\n\x07\x63reator\x18\x06 \x01(\t\x12\x0f\n\x07\x63reated\x18\x07 \x01(\t\x12\r\n\x05valid\x18\x08 \x01(\x08\x12&\n\nattributes\x18\t \x03(\x0b\x32\x12.rep.proto.CreAttr\"L\n\x07\x43reAttr\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x10\n\x08required\x18\x03 \x01(\x08\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\"g\n\x0cVerCreStatus\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\x19\n\x11revokedClaimIndex\x18\x04 \x03(\t\x12\x0f\n\x07\x63reator\x18\x05 \x01(\t\"p\n\tSignature\x12\"\n\x07\x63\x65rt_id\x18\x01 \x01(\x0b\x32\x11.rep.proto.CertId\x12,\n\x08tm_local\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x11\n\tsignature\x18\x03 \x01(\x0c\"0\n\x0e\x43haincodeInput\x12\x10\n\x08\x66unction\x18\x01 \x01(\t\x12\x0c\n\x04\x61rgs\x18\x02 \x03(\t\"5\n\x0b\x43haincodeId\x12\x15\n\rchaincodeName\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\x05\"\xc0\x01\n\x05\x42lock\x12&\n\x06header\x18\x01 \x01(\x0b\x32\x16.rep.proto.BlockHeader\x12,\n\x0ctransactions\x18\x03 \x03(\x0b\x32\x16.rep.proto.Transaction\x12\x39\n\x13transaction_results\x18\x04 \x03(\x0b\x32\x1c.rep.proto.TransactionResult\x12&\n\x06reg_tx\x18\x0f \x01(\x0b\x32\x16.rep.proto.Transaction\"\xff\x01\n\x0b\x42lockHeader\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x0e\n\x06height\x18\x02 \x01(\x04\x12\x11\n\tcommit_tx\x18\x03 \x01(\x0c\x12\x18\n\x10\x63ommit_tx_result\x18\x04 \x01(\x0c\x12\x14\n\x0chash_present\x18\x05 \x01(\x0c\x12\x15\n\rhash_previous\x18\x06 \x01(\x0c\x12\x14\n\x0c\x63ommit_state\x18\x07 \x01(\x0c\x12\x1b\n\x13\x63ommit_state_global\x18\x08 \x01(\x0c\x12\x16\n\x0eheight_expired\x18\t \x01(\x04\x12*\n\x0c\x65ndorsements\x18\n \x03(\x0b\x32\x14.rep.proto.Signature\">\n\x10TransactionError\x12\x0c\n\x04txId\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\x05\x12\x0e\n\x06reason\x18\x03 \x01(\t\"\xa0\x03\n\x11TransactionResult\x12\x0c\n\x04txId\x18\x01 \x01(\t\x12?\n\nstates_get\x18\x02 \x03(\x0b\x32+.rep.proto.TransactionResult.StatesGetEntry\x12?\n\nstates_set\x18\x03 \x03(\x0b\x32+.rep.proto.TransactionResult.StatesSetEntry\x12?\n\nstates_del\x18\x04 \x03(\x0b\x32+.rep.proto.TransactionResult.StatesDelEntry\x12$\n\x03\x65rr\x18\x05 \x01(\x0b\x32\x17.rep.proto.ActionResult\x1a\x30\n\x0eStatesGetEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1a\x30\n\x0eStatesSetEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1a\x30\n\x0eStatesDelEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"\xfd\x02\n\x0bTransaction\x12\n\n\x02id\x18\x01 \x01(\t\x12)\n\x04type\x18\x02 \x01(\x0e\x32\x1b.rep.proto.Transaction.Type\x12#\n\x03\x63id\x18\x03 \x01(\x0b\x32\x16.rep.proto.ChaincodeId\x12*\n\x04spec\x18\x04 \x01(\x0b\x32\x1a.rep.proto.ChaincodeDeployH\x00\x12(\n\x03ipt\x18\x05 \x01(\x0b\x32\x19.rep.proto.ChaincodeInputH\x00\x12\x0f\n\x05state\x18\x06 \x01(\x08H\x00\x12\x11\n\tgas_limit\x18\x07 \x01(\r\x12\x0b\n\x03oid\x18\x08 \x01(\t\x12\'\n\tsignature\x18\t \x01(\x0b\x32\x14.rep.proto.Signature\"Z\n\x04Type\x12\r\n\tUNDEFINED\x10\x00\x12\x14\n\x10\x43HAINCODE_DEPLOY\x10\x01\x12\x14\n\x10\x43HAINCODE_INVOKE\x10\x02\x12\x17\n\x13\x43HAINCODE_SET_STATE\x10\x03\x42\x06\n\x04para\"\xf5\x05\n\x0f\x43haincodeDeploy\x12\x0f\n\x07timeout\x18\x01 \x01(\x05\x12\x14\n\x0c\x63ode_package\x18\x02 \x01(\t\x12\x13\n\x0blegal_prose\x18\x03 \x01(\t\x12\x33\n\x06\x63_type\x18\x04 \x01(\x0e\x32#.rep.proto.ChaincodeDeploy.CodeType\x12\x32\n\x06r_type\x18\x05 \x01(\x0e\x32\".rep.proto.ChaincodeDeploy.RunType\x12\x34\n\x06s_type\x18\x06 \x01(\x0e\x32$.rep.proto.ChaincodeDeploy.StateType\x12\x16\n\x0einit_parameter\x18\x07 \x01(\t\x12J\n\x0f\x63\x63lassification\x18\x08 \x01(\x0e\x32\x31.rep.proto.ChaincodeDeploy.ContractClassification\x12$\n\x1cis_called_by_other_contracts\x18\t \x01(\x08\"\x89\x01\n\x08\x43odeType\x12\x12\n\x0e\x43ODE_UNDEFINED\x10\x00\x12\x13\n\x0f\x43ODE_JAVASCRIPT\x10\x01\x12\x0e\n\nCODE_SCALA\x10\x02\x12\x10\n\x0c\x43ODE_VCL_DLL\x10\x03\x12\x10\n\x0c\x43ODE_VCL_EXE\x10\x04\x12\x11\n\rCODE_VCL_WASM\x10\x05\x12\r\n\tCODE_WASM\x10\x06\"P\n\x07RunType\x12\x11\n\rRUN_UNDEFINED\x10\x00\x12\x0e\n\nRUN_SERIAL\x10\x01\x12\x10\n\x0cRUN_PARALLEL\x10\x02\x12\x10\n\x0cRUN_OPTIONAL\x10\x03\"C\n\tStateType\x12\x13\n\x0fSTATE_UNDEFINED\x10\x00\x12\x0f\n\x0bSTATE_BLOCK\x10\x01\x12\x10\n\x0cSTATE_GLOBAL\x10\x02\"Z\n\x16\x43ontractClassification\x12\x16\n\x12\x43ONTRACT_UNDEFINED\x10\x00\x12\x13\n\x0f\x43ONTRACT_SYSTEM\x10\x01\x12\x13\n\x0f\x43ONTRACT_CUSTOM\x10\x02\",\n\x0c\x41\x63tionResult\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0e\n\x06reason\x18\x02 \x01(\t\"7\n\nStateProof\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\x12\r\n\x05proof\x18\x03 \x01(\x0c\"\x8a\x01\n\x0e\x42lockchainInfo\x12\x0e\n\x06height\x18\x01 \x01(\x04\x12\x19\n\x11totalTransactions\x18\x02 \x01(\x04\x12\x18\n\x10\x63urrentBlockHash\x18\x03 \x01(\x0c\x12\x19\n\x11previousBlockHash\x18\x04 \x01(\x0c\x12\x18\n\x10\x63urrentStateHash\x18\x05 \x01(\x0c\x42\x0b\n\trep.protob\x06proto3')



_EVENT = DESCRIPTOR.message_types_by_name['Event']
_SIGNER = DESCRIPTOR.message_types_by_name['Signer']
_CERTID = DESCRIPTOR.message_types_by_name['CertId']
_CERTIFICATE = DESCRIPTOR.message_types_by_name['Certificate']
_OPERATE = DESCRIPTOR.message_types_by_name['Operate']
_AUTHORIZE = DESCRIPTOR.message_types_by_name['Authorize']
_BINDCERTTOAUTHORIZE = DESCRIPTOR.message_types_by_name['BindCertToAuthorize']
_CRECLASTRUCT = DESCRIPTOR.message_types_by_name['CreClaStruct']
_CREATTR = DESCRIPTOR.message_types_by_name['CreAttr']
_VERCRESTATUS = DESCRIPTOR.message_types_by_name['VerCreStatus']
_SIGNATURE = DESCRIPTOR.message_types_by_name['Signature']
_CHAINCODEINPUT = DESCRIPTOR.message_types_by_name['ChaincodeInput']
_CHAINCODEID = DESCRIPTOR.message_types_by_name['ChaincodeId']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_BLOCKHEADER = DESCRIPTOR.message_types_by_name['BlockHeader']
_TRANSACTIONERROR = DESCRIPTOR.message_types_by_name['TransactionError']
_TRANSACTIONRESULT = DESCRIPTOR.message_types_by_name['TransactionResult']
_TRANSACTIONRESULT_STATESGETENTRY = _TRANSACTIONRESULT.nested_types_by_name['StatesGetEntry']
_TRANSACTIONRESULT_STATESSETENTRY = _TRANSACTIONRESULT.nested_types_by_name['StatesSetEntry']
_TRANSACTIONRESULT_STATESDELENTRY = _TRANSACTIONRESULT.nested_types_by_name['StatesDelEntry']
_TRANSACTION = DESCRIPTOR.message_types_by_name['Transaction']
_CHAINCODEDEPLOY = DESCRIPTOR.message_types_by_name['ChaincodeDeploy']
_ACTIONRESULT = DESCRIPTOR.message_types_by_name['ActionResult']
_STATEPROOF = DESCRIPTOR.message_types_by_name['StateProof']
_BLOCKCHAININFO = DESCRIPTOR.message_types_by_name['BlockchainInfo']
_EVENT_ACTION = _EVENT.enum_types_by_name['Action']
_CERTIFICATE_CERTTYPE = _CERTIFICATE.enum_types_by_name['CertType']
_OPERATE_OPERATETYPE = _OPERATE.enum_types_by_name['OperateType']
_AUTHORIZE_TRANSFERTYPE = _AUTHORIZE.enum_types_by_name['TransferType']
_TRANSACTION_TYPE = _TRANSACTION.enum_types_by_name['Type']
_CHAINCODEDEPLOY_CODETYPE = _CHAINCODEDEPLOY.enum_types_by_name['CodeType']
_CHAINCODEDEPLOY_RUNTYPE = _CHAINCODEDEPLOY.enum_types_by_name['RunType']
_CHAINCODEDEPLOY_STATETYPE = _CHAINCODEDEPLOY.enum_types_by_name['StateType']
_CHAINCODEDEPLOY_CONTRACTCLASSIFICATION = _CHAINCODEDEPLOY.enum_types_by_name['ContractClassification']
Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Event)
  })
_sym_db.RegisterMessage(Event)

Signer = _reflection.GeneratedProtocolMessageType('Signer', (_message.Message,), {
  'DESCRIPTOR' : _SIGNER,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Signer)
  })
_sym_db.RegisterMessage(Signer)

CertId = _reflection.GeneratedProtocolMessageType('CertId', (_message.Message,), {
  'DESCRIPTOR' : _CERTID,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.CertId)
  })
_sym_db.RegisterMessage(CertId)

Certificate = _reflection.GeneratedProtocolMessageType('Certificate', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATE,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Certificate)
  })
_sym_db.RegisterMessage(Certificate)

Operate = _reflection.GeneratedProtocolMessageType('Operate', (_message.Message,), {
  'DESCRIPTOR' : _OPERATE,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Operate)
  })
_sym_db.RegisterMessage(Operate)

Authorize = _reflection.GeneratedProtocolMessageType('Authorize', (_message.Message,), {
  'DESCRIPTOR' : _AUTHORIZE,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Authorize)
  })
_sym_db.RegisterMessage(Authorize)

BindCertToAuthorize = _reflection.GeneratedProtocolMessageType('BindCertToAuthorize', (_message.Message,), {
  'DESCRIPTOR' : _BINDCERTTOAUTHORIZE,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.BindCertToAuthorize)
  })
_sym_db.RegisterMessage(BindCertToAuthorize)

CreClaStruct = _reflection.GeneratedProtocolMessageType('CreClaStruct', (_message.Message,), {
  'DESCRIPTOR' : _CRECLASTRUCT,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.CreClaStruct)
  })
_sym_db.RegisterMessage(CreClaStruct)

CreAttr = _reflection.GeneratedProtocolMessageType('CreAttr', (_message.Message,), {
  'DESCRIPTOR' : _CREATTR,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.CreAttr)
  })
_sym_db.RegisterMessage(CreAttr)

VerCreStatus = _reflection.GeneratedProtocolMessageType('VerCreStatus', (_message.Message,), {
  'DESCRIPTOR' : _VERCRESTATUS,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.VerCreStatus)
  })
_sym_db.RegisterMessage(VerCreStatus)

Signature = _reflection.GeneratedProtocolMessageType('Signature', (_message.Message,), {
  'DESCRIPTOR' : _SIGNATURE,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Signature)
  })
_sym_db.RegisterMessage(Signature)

ChaincodeInput = _reflection.GeneratedProtocolMessageType('ChaincodeInput', (_message.Message,), {
  'DESCRIPTOR' : _CHAINCODEINPUT,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.ChaincodeInput)
  })
_sym_db.RegisterMessage(ChaincodeInput)

ChaincodeId = _reflection.GeneratedProtocolMessageType('ChaincodeId', (_message.Message,), {
  'DESCRIPTOR' : _CHAINCODEID,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.ChaincodeId)
  })
_sym_db.RegisterMessage(ChaincodeId)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Block)
  })
_sym_db.RegisterMessage(Block)

BlockHeader = _reflection.GeneratedProtocolMessageType('BlockHeader', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKHEADER,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.BlockHeader)
  })
_sym_db.RegisterMessage(BlockHeader)

TransactionError = _reflection.GeneratedProtocolMessageType('TransactionError', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONERROR,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.TransactionError)
  })
_sym_db.RegisterMessage(TransactionError)

TransactionResult = _reflection.GeneratedProtocolMessageType('TransactionResult', (_message.Message,), {

  'StatesGetEntry' : _reflection.GeneratedProtocolMessageType('StatesGetEntry', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONRESULT_STATESGETENTRY,
    '__module__' : 'rc2_pb2'
    # @@protoc_insertion_point(class_scope:rep.proto.TransactionResult.StatesGetEntry)
    })
  ,

  'StatesSetEntry' : _reflection.GeneratedProtocolMessageType('StatesSetEntry', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONRESULT_STATESSETENTRY,
    '__module__' : 'rc2_pb2'
    # @@protoc_insertion_point(class_scope:rep.proto.TransactionResult.StatesSetEntry)
    })
  ,

  'StatesDelEntry' : _reflection.GeneratedProtocolMessageType('StatesDelEntry', (_message.Message,), {
    'DESCRIPTOR' : _TRANSACTIONRESULT_STATESDELENTRY,
    '__module__' : 'rc2_pb2'
    # @@protoc_insertion_point(class_scope:rep.proto.TransactionResult.StatesDelEntry)
    })
  ,
  'DESCRIPTOR' : _TRANSACTIONRESULT,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.TransactionResult)
  })
_sym_db.RegisterMessage(TransactionResult)
_sym_db.RegisterMessage(TransactionResult.StatesGetEntry)
_sym_db.RegisterMessage(TransactionResult.StatesSetEntry)
_sym_db.RegisterMessage(TransactionResult.StatesDelEntry)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTION,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.Transaction)
  })
_sym_db.RegisterMessage(Transaction)

ChaincodeDeploy = _reflection.GeneratedProtocolMessageType('ChaincodeDeploy', (_message.Message,), {
  'DESCRIPTOR' : _CHAINCODEDEPLOY,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.ChaincodeDeploy)
  })
_sym_db.RegisterMessage(ChaincodeDeploy)

ActionResult = _reflection.GeneratedProtocolMessageType('ActionResult', (_message.Message,), {
  'DESCRIPTOR' : _ACTIONRESULT,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.ActionResult)
  })
_sym_db.RegisterMessage(ActionResult)

StateProof = _reflection.GeneratedProtocolMessageType('StateProof', (_message.Message,), {
  'DESCRIPTOR' : _STATEPROOF,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.StateProof)
  })
_sym_db.RegisterMessage(StateProof)

BlockchainInfo = _reflection.GeneratedProtocolMessageType('BlockchainInfo', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKCHAININFO,
  '__module__' : 'rc2_pb2'
  # @@protoc_insertion_point(class_scope:rep.proto.BlockchainInfo)
  })
_sym_db.RegisterMessage(BlockchainInfo)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\trep.proto'
  _TRANSACTIONRESULT_STATESGETENTRY._options = None
  _TRANSACTIONRESULT_STATESGETENTRY._serialized_options = b'8\001'
  _TRANSACTIONRESULT_STATESSETENTRY._options = None
  _TRANSACTIONRESULT_STATESSETENTRY._serialized_options = b'8\001'
  _TRANSACTIONRESULT_STATESDELENTRY._options = None
  _TRANSACTIONRESULT_STATESDELENTRY._serialized_options = b'8\001'
  _EVENT._serialized_start=58
  _EVENT._serialized_end=443
  _EVENT_ACTION._serialized_start=198
  _EVENT_ACTION._serialized_end=443
  _SIGNER._serialized_start=446
  _SIGNER._serialized_end=815
  _CERTID._serialized_start=817
  _CERTID._serialized_end=882
  _CERTIFICATE._serialized_start=885
  _CERTIFICATE._serialized_end=1244
  _CERTIFICATE_CERTTYPE._serialized_start=1172
  _CERTIFICATE_CERTTYPE._serialized_end=1244
  _OPERATE._serialized_start=1247
  _OPERATE._serialized_end=1679
  _OPERATE_OPERATETYPE._serialized_start=1600
  _OPERATE_OPERATETYPE._serialized_end=1679
  _AUTHORIZE._serialized_start=1682
  _AUTHORIZE._serialized_end=2031
  _AUTHORIZE_TRANSFERTYPE._serialized_start=1951
  _AUTHORIZE_TRANSFERTYPE._serialized_end=2031
  _BINDCERTTOAUTHORIZE._serialized_start=2033
  _BINDCERTTOAUTHORIZE._serialized_end=2129
  _CRECLASTRUCT._serialized_start=2132
  _CRECLASTRUCT._serialized_end=2320
  _CREATTR._serialized_start=2322
  _CREATTR._serialized_end=2398
  _VERCRESTATUS._serialized_start=2400
  _VERCRESTATUS._serialized_end=2503
  _SIGNATURE._serialized_start=2505
  _SIGNATURE._serialized_end=2617
  _CHAINCODEINPUT._serialized_start=2619
  _CHAINCODEINPUT._serialized_end=2667
  _CHAINCODEID._serialized_start=2669
  _CHAINCODEID._serialized_end=2722
  _BLOCK._serialized_start=2725
  _BLOCK._serialized_end=2917
  _BLOCKHEADER._serialized_start=2920
  _BLOCKHEADER._serialized_end=3175
  _TRANSACTIONERROR._serialized_start=3177
  _TRANSACTIONERROR._serialized_end=3239
  _TRANSACTIONRESULT._serialized_start=3242
  _TRANSACTIONRESULT._serialized_end=3658
  _TRANSACTIONRESULT_STATESGETENTRY._serialized_start=3510
  _TRANSACTIONRESULT_STATESGETENTRY._serialized_end=3558
  _TRANSACTIONRESULT_STATESSETENTRY._serialized_start=3560
  _TRANSACTIONRESULT_STATESSETENTRY._serialized_end=3608
  _TRANSACTIONRESULT_STATESDELENTRY._serialized_start=3610
  _TRANSACTIONRESULT_STATESDELENTRY._serialized_end=3658
  _TRANSACTION._serialized_start=3661
  _TRANSACTION._serialized_end=4042
  _TRANSACTION_TYPE._serialized_start=3944
  _TRANSACTION_TYPE._serialized_end=4034
  _CHAINCODEDEPLOY._serialized_start=4045
  _CHAINCODEDEPLOY._serialized_end=4802
  _CHAINCODEDEPLOY_CODETYPE._serialized_start=4422
  _CHAINCODEDEPLOY_CODETYPE._serialized_end=4559
  _CHAINCODEDEPLOY_RUNTYPE._serialized_start=4561
  _CHAINCODEDEPLOY_RUNTYPE._serialized_end=4641
  _CHAINCODEDEPLOY_STATETYPE._serialized_start=4643
  _CHAINCODEDEPLOY_STATETYPE._serialized_end=4710
  _CHAINCODEDEPLOY_CONTRACTCLASSIFICATION._serialized_start=4712
  _CHAINCODEDEPLOY_CONTRACTCLASSIFICATION._serialized_end=4802
  _ACTIONRESULT._serialized_start=4804
  _ACTIONRESULT._serialized_end=4848
  _STATEPROOF._serialized_start=4850
  _STATEPROOF._serialized_end=4905
  _BLOCKCHAININFO._serialized_start=4908
  _BLOCKCHAININFO._serialized_end=5046
# @@protoc_insertion_point(module_scope)

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: peer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\npeer.proto\x12\nrep.protos\x1a\x1fgoogle/protobuf/timestamp.proto\"\xcf\x02\n\x05\x45vent\x12\x0c\n\x04\x66rom\x18\x01 \x01(\t\x12\n\n\x02to\x18\x02 \x01(\t\x12(\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32\x18.rep.protos.Event.Action\x12\x1e\n\x03\x62lk\x18\x04 \x01(\x0b\x32\x11.rep.protos.Block\"\xe1\x01\n\x06\x41\x63tion\x12\x13\n\x0fSUBSCRIBE_TOPIC\x10\x00\x12\x0f\n\x0bTRANSACTION\x10\x01\x12\r\n\tBLOCK_NEW\x10\x02\x12\x15\n\x11\x42LOCK_ENDORSEMENT\x10\x03\x12\x0f\n\x0b\x45NDORSEMENT\x10\x04\x12\r\n\tMEMBER_UP\x10\x05\x12\x0f\n\x0bMEMBER_DOWN\x10\x06\x12\x0e\n\nCANDIDATOR\x10\x07\x12\x11\n\rGENESIS_BLOCK\x10\x08\x12\x0e\n\nBLOCK_SYNC\x10\t\x12\x13\n\x0f\x42LOCK_SYNC_DATA\x10\n\x12\x12\n\x0e\x42LOCK_SYNC_SUC\x10\x0b\"O\n\x06Signer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x63redit_code\x18\x02 \x01(\t\x12\x0e\n\x06mobile\x18\x03 \x01(\t\x12\x12\n\ncert_names\x18\x04 \x03(\t\"0\n\x06\x43\x65rtId\x12\x13\n\x0b\x63redit_code\x18\x01 \x01(\t\x12\x11\n\tcert_name\x18\x02 \x01(\t\"\xa6\x01\n\x0b\x43\x65rtificate\x12\x13\n\x0b\x63\x65rtificate\x18\x01 \x01(\t\x12\x10\n\x08\x61lg_type\x18\x02 \x01(\t\x12\x12\n\ncert_valid\x18\x03 \x01(\x08\x12,\n\x08reg_Time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\nunreg_Time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"q\n\tSignature\x12#\n\x07\x63\x65rt_id\x18\x01 \x01(\x0b\x32\x12.rep.protos.CertId\x12,\n\x08tm_local\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x11\n\tsignature\x18\x03 \x01(\x0c\"0\n\x0e\x43haincodeInput\x12\x10\n\x08\x66unction\x18\x01 \x01(\t\x12\x0c\n\x04\x61rgs\x18\x02 \x03(\t\"5\n\x0b\x43haincodeId\x12\x15\n\rchaincodeName\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\x05\"\xe0\x01\n\x0f\x43haincodeDeploy\x12\x0f\n\x07timeout\x18\x01 \x01(\x05\x12\x14\n\x0c\x63ode_package\x18\x02 \x01(\t\x12\x13\n\x0blegal_prose\x18\x03 \x01(\t\x12\x33\n\x05\x63type\x18\x04 \x01(\x0e\x32$.rep.protos.ChaincodeDeploy.CodeType\"\\\n\x08\x43odeType\x12\x12\n\x0e\x43ODE_UNDEFINED\x10\x00\x12\x13\n\x0f\x43ODE_JAVASCRIPT\x10\x01\x12\x0e\n\nCODE_SCALA\x10\x02\x12\x17\n\x13\x43ODE_SCALA_PARALLEL\x10\x03\"\xe2\x02\n\x0bTransaction\x12\n\n\x02id\x18\x01 \x01(\t\x12*\n\x04type\x18\x02 \x01(\x0e\x32\x1c.rep.protos.Transaction.Type\x12$\n\x03\x63id\x18\x03 \x01(\x0b\x32\x17.rep.protos.ChaincodeId\x12+\n\x04spec\x18\x04 \x01(\x0b\x32\x1b.rep.protos.ChaincodeDeployH\x00\x12)\n\x03ipt\x18\x05 \x01(\x0b\x32\x1a.rep.protos.ChaincodeInputH\x00\x12\x0f\n\x05state\x18\x06 \x01(\x08H\x00\x12(\n\tsignature\x18\x07 \x01(\x0b\x32\x15.rep.protos.Signature\"Z\n\x04Type\x12\r\n\tUNDEFINED\x10\x00\x12\x14\n\x10\x43HAINCODE_DEPLOY\x10\x01\x12\x14\n\x10\x43HAINCODE_INVOKE\x10\x02\x12\x17\n\x13\x43HAINCODE_SET_STATE\x10\x03\x42\x06\n\x04para\"\x82\x02\n\x05\x42lock\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x0e\n\x06height\x18\x02 \x01(\x04\x12-\n\x0ctransactions\x18\x03 \x03(\x0b\x32\x17.rep.protos.Transaction\x12\x39\n\x12transactionResults\x18\x04 \x03(\x0b\x32\x1d.rep.protos.TransactionResult\x12\x13\n\x0bhashOfBlock\x18\x05 \x01(\x0c\x12\x19\n\x11previousBlockHash\x18\x06 \x01(\x0c\x12+\n\x0c\x65ndorsements\x18\x07 \x03(\x0b\x32\x15.rep.protos.Signature\x12\x11\n\tstateHash\x18\x08 \x01(\x0c\":\n\x07OperLog\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x10\n\x08oldValue\x18\x02 \x01(\x0c\x12\x10\n\x08newValue\x18\x03 \x01(\x0c\",\n\x0c\x41\x63tionResult\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0e\n\x06reason\x18\x02 \x01(\t\"l\n\x11TransactionResult\x12\x0c\n\x04txId\x18\x01 \x01(\t\x12\x1f\n\x02ol\x18\x02 \x03(\x0b\x32\x13.rep.protos.OperLog\x12(\n\x06result\x18\x03 \x01(\x0b\x32\x18.rep.protos.ActionResult\"\x8a\x01\n\x0e\x42lockchainInfo\x12\x0e\n\x06height\x18\x01 \x01(\x04\x12\x19\n\x11totalTransactions\x18\x02 \x01(\x04\x12\x18\n\x10\x63urrentBlockHash\x18\x03 \x01(\x0c\x12\x19\n\x11previousBlockHash\x18\x04 \x01(\x0c\x12\x18\n\x10\x63urrentStateHash\x18\x05 \x01(\x0c\"8\n\x0cMPbftPrepare\x12(\n\tsignature\x18\x01 \x01(\x0b\x32\x15.rep.protos.Signature\"c\n\x0bMPbftCommit\x12*\n\x08prepares\x18\x01 \x03(\x0b\x32\x18.rep.protos.MPbftPrepare\x12(\n\tsignature\x18\x02 \x01(\x0b\x32\x15.rep.protos.Signature\"`\n\nMPbftReply\x12(\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x17.rep.protos.MPbftCommit\x12(\n\tsignature\x18\x02 \x01(\x0b\x32\x15.rep.protos.SignatureB\x0c\n\nrep.protosb\x06proto3')



_EVENT = DESCRIPTOR.message_types_by_name['Event']
_SIGNER = DESCRIPTOR.message_types_by_name['Signer']
_CERTID = DESCRIPTOR.message_types_by_name['CertId']
_CERTIFICATE = DESCRIPTOR.message_types_by_name['Certificate']
_SIGNATURE = DESCRIPTOR.message_types_by_name['Signature']
_CHAINCODEINPUT = DESCRIPTOR.message_types_by_name['ChaincodeInput']
_CHAINCODEID = DESCRIPTOR.message_types_by_name['ChaincodeId']
_CHAINCODEDEPLOY = DESCRIPTOR.message_types_by_name['ChaincodeDeploy']
_TRANSACTION = DESCRIPTOR.message_types_by_name['Transaction']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_OPERLOG = DESCRIPTOR.message_types_by_name['OperLog']
_ACTIONRESULT = DESCRIPTOR.message_types_by_name['ActionResult']
_TRANSACTIONRESULT = DESCRIPTOR.message_types_by_name['TransactionResult']
_BLOCKCHAININFO = DESCRIPTOR.message_types_by_name['BlockchainInfo']
_MPBFTPREPARE = DESCRIPTOR.message_types_by_name['MPbftPrepare']
_MPBFTCOMMIT = DESCRIPTOR.message_types_by_name['MPbftCommit']
_MPBFTREPLY = DESCRIPTOR.message_types_by_name['MPbftReply']
_EVENT_ACTION = _EVENT.enum_types_by_name['Action']
_CHAINCODEDEPLOY_CODETYPE = _CHAINCODEDEPLOY.enum_types_by_name['CodeType']
_TRANSACTION_TYPE = _TRANSACTION.enum_types_by_name['Type']
Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.Event)
  })
_sym_db.RegisterMessage(Event)

Signer = _reflection.GeneratedProtocolMessageType('Signer', (_message.Message,), {
  'DESCRIPTOR' : _SIGNER,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.Signer)
  })
_sym_db.RegisterMessage(Signer)

CertId = _reflection.GeneratedProtocolMessageType('CertId', (_message.Message,), {
  'DESCRIPTOR' : _CERTID,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.CertId)
  })
_sym_db.RegisterMessage(CertId)

Certificate = _reflection.GeneratedProtocolMessageType('Certificate', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATE,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.Certificate)
  })
_sym_db.RegisterMessage(Certificate)

Signature = _reflection.GeneratedProtocolMessageType('Signature', (_message.Message,), {
  'DESCRIPTOR' : _SIGNATURE,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.Signature)
  })
_sym_db.RegisterMessage(Signature)

ChaincodeInput = _reflection.GeneratedProtocolMessageType('ChaincodeInput', (_message.Message,), {
  'DESCRIPTOR' : _CHAINCODEINPUT,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.ChaincodeInput)
  })
_sym_db.RegisterMessage(ChaincodeInput)

ChaincodeId = _reflection.GeneratedProtocolMessageType('ChaincodeId', (_message.Message,), {
  'DESCRIPTOR' : _CHAINCODEID,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.ChaincodeId)
  })
_sym_db.RegisterMessage(ChaincodeId)

ChaincodeDeploy = _reflection.GeneratedProtocolMessageType('ChaincodeDeploy', (_message.Message,), {
  'DESCRIPTOR' : _CHAINCODEDEPLOY,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.ChaincodeDeploy)
  })
_sym_db.RegisterMessage(ChaincodeDeploy)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTION,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.Transaction)
  })
_sym_db.RegisterMessage(Transaction)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.Block)
  })
_sym_db.RegisterMessage(Block)

OperLog = _reflection.GeneratedProtocolMessageType('OperLog', (_message.Message,), {
  'DESCRIPTOR' : _OPERLOG,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.OperLog)
  })
_sym_db.RegisterMessage(OperLog)

ActionResult = _reflection.GeneratedProtocolMessageType('ActionResult', (_message.Message,), {
  'DESCRIPTOR' : _ACTIONRESULT,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.ActionResult)
  })
_sym_db.RegisterMessage(ActionResult)

TransactionResult = _reflection.GeneratedProtocolMessageType('TransactionResult', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONRESULT,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.TransactionResult)
  })
_sym_db.RegisterMessage(TransactionResult)

BlockchainInfo = _reflection.GeneratedProtocolMessageType('BlockchainInfo', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKCHAININFO,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.BlockchainInfo)
  })
_sym_db.RegisterMessage(BlockchainInfo)

MPbftPrepare = _reflection.GeneratedProtocolMessageType('MPbftPrepare', (_message.Message,), {
  'DESCRIPTOR' : _MPBFTPREPARE,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.MPbftPrepare)
  })
_sym_db.RegisterMessage(MPbftPrepare)

MPbftCommit = _reflection.GeneratedProtocolMessageType('MPbftCommit', (_message.Message,), {
  'DESCRIPTOR' : _MPBFTCOMMIT,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.MPbftCommit)
  })
_sym_db.RegisterMessage(MPbftCommit)

MPbftReply = _reflection.GeneratedProtocolMessageType('MPbftReply', (_message.Message,), {
  'DESCRIPTOR' : _MPBFTREPLY,
  '__module__' : 'peer_pb2'
  # @@protoc_insertion_point(class_scope:rep.protos.MPbftReply)
  })
_sym_db.RegisterMessage(MPbftReply)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\nrep.protos'
  _EVENT._serialized_start=60
  _EVENT._serialized_end=395
  _EVENT_ACTION._serialized_start=170
  _EVENT_ACTION._serialized_end=395
  _SIGNER._serialized_start=397
  _SIGNER._serialized_end=476
  _CERTID._serialized_start=478
  _CERTID._serialized_end=526
  _CERTIFICATE._serialized_start=529
  _CERTIFICATE._serialized_end=695
  _SIGNATURE._serialized_start=697
  _SIGNATURE._serialized_end=810
  _CHAINCODEINPUT._serialized_start=812
  _CHAINCODEINPUT._serialized_end=860
  _CHAINCODEID._serialized_start=862
  _CHAINCODEID._serialized_end=915
  _CHAINCODEDEPLOY._serialized_start=918
  _CHAINCODEDEPLOY._serialized_end=1142
  _CHAINCODEDEPLOY_CODETYPE._serialized_start=1050
  _CHAINCODEDEPLOY_CODETYPE._serialized_end=1142
  _TRANSACTION._serialized_start=1145
  _TRANSACTION._serialized_end=1499
  _TRANSACTION_TYPE._serialized_start=1401
  _TRANSACTION_TYPE._serialized_end=1491
  _BLOCK._serialized_start=1502
  _BLOCK._serialized_end=1760
  _OPERLOG._serialized_start=1762
  _OPERLOG._serialized_end=1820
  _ACTIONRESULT._serialized_start=1822
  _ACTIONRESULT._serialized_end=1866
  _TRANSACTIONRESULT._serialized_start=1868
  _TRANSACTIONRESULT._serialized_end=1976
  _BLOCKCHAININFO._serialized_start=1979
  _BLOCKCHAININFO._serialized_end=2117
  _MPBFTPREPARE._serialized_start=2119
  _MPBFTPREPARE._serialized_end=2175
  _MPBFTCOMMIT._serialized_start=2177
  _MPBFTCOMMIT._serialized_end=2276
  _MPBFTREPLY._serialized_start=2278
  _MPBFTREPLY._serialized_end=2374
# @@protoc_insertion_point(module_scope)
